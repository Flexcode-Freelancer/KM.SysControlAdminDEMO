@using KM.SysControlAdmin.EN.Trainer___EN
@using KM.SysControlAdmin.EN.Schedules___EN
@model KM.SysControlAdmin.EN.Course__EN.Course

@{
    ViewData["Title"] = "Crear Curso";
    List<Trainer> trainers = ViewBag.Trainers as List<Trainer>;
    List<Schedule> schedules = ViewBag.Schedule as List<Schedule>;
}

<h1>Crear Nuevo Curso</h1>
<span>@ViewBag.Error</span>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id ="Form" asp-action="Create" onsubmit="CreateRecord(event)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Code" class="control-label"></label>
                <input asp-for="Code" class="form-control" placeholder="Ingresar" required readonly/>
                <span asp-validation-for="Code" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" placeholder="Ingresar" required/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text">$</span>
                    </div>
                    <input asp-for="Price" class="form-control" placeholder="00.00" required />
                </div>
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartTime" class="control-label">Fecha de Inicio</label>
                <input asp-for="StartTime" type="date" class="form-control" />
                <span asp-validation-for="StartTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndTime" class="control-label">Fecha de Finalización</label>
                <input asp-for="EndTime" type="date" class="form-control" />
                <span asp-validation-for="EndTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MaxStudent" class="control-label"></label>
                <input asp-for="MaxStudent" type="number" class="form-control" placeholder="Ingresar" required/>
                <span asp-validation-for="MaxStudent" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdSchedule" class="control-label"></label>
                <select class="form-select" id="IdSchedule" name="IdSchedule">
                    <option selected value="">Seleccionar</option>
                    @foreach (var schedule in schedules!)
                    {
                        <option value="@schedule.Id">@schedule.StartTime - @schedule.EndTime</option>
                    }
                </select>
                <span asp-validation-for="IdSchedule" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdTrainer" class="control-label"></label>
                <select class="form-select" name="IdTrainer">
                    <option selected value="">Seleccionar</option>
                    @foreach (var item in trainers!)
                    {
                        <option value="@item.Id">@item.Name @item.LastName</option>
                    }
                </select>
                <span asp-validation-for="IdTrainer" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select class="form-select" name="Status">
                    <option selected value="0">Seleccionar</option>
                    <option value="1">Activo</option>
                    <option value="2">Inactivo</option>
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Crear Curso" class="btn btn-primary" /> |
                <a class="btn btn-outline-secondary" asp-action="Index">Regresar a La Lista</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function showErrorAlert(message) {
            Swal.fire({
                title: 'Error',
                text: message,
                icon: 'error'
            });
        }
        // Mostrar alerta de ViewBag.Error si es necesario
        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            @:showErrorAlert('@ViewBag.Error');
        }
        // Alerta con SweetAlert2
        function CreateRecord(e) {
            e.preventDefault();
            const form = document.getElementById('Form');
            const inputs = document.querySelectorAll('.form-input');
            const nameFields = ['Name'];
            const regex = /^[A-ZÑa-zñáéíóúÁÉÍÓÚ. ]+$/;

            let isValid = true;

            // Validar que los campos nameFields solo contengan letras, punto y espacios
            nameFields.forEach((field) => {
                const input = document.querySelector(`#${field}`);
                if (!regex.test(input.value)) {
                    isValid = false;
                }
            });

            // Si la validación falla, muestra una alerta advirtiendo al usuario
            if (!isValid) {
                Swal.fire({
                    title: '!Advertencia!',
                    text: 'Ciertos Campos Solo Deben Tener Letras, Revisa Tu Ficha',
                    icon: 'warning',
                    confirmButtonText: 'Aceptar'
                });
                return;
            }

            // Si todos los campos son válidos, muestra la alerta de confirmación
            Swal.fire({
                title: '¿Guardar Nuevo Curso?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Sí, Guardar Curso'
                    cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit();
                }
            });
        }
    </script>
}