@model KM.SysControlAdmin.EN.Course__EN.Course

@{
    ViewData["Title"] = "Detalles del Curso";
}

<h1>Detalles del Curso Existente</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Code)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Code)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FormattedStartTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EndTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FormattedEndTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MaxStudent)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MaxStudent) Estudiantes
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IdSchedule)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Schedule!.StartTime) - @Html.DisplayFor(model => model.Schedule!.EndTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IdTrainer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Trainer!.Name) @Html.DisplayFor(model => model.Trainer!.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Status == 1)
            {
                <span>Activo</span>
            }
            else if (Model.Status == 2)
            {
                <span>Inactivo</span>
            }
            else
            {
                <span>Desconocido</span>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateModification)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateModification)
        </dd>
    </dl>
</div>

<div>
    @Html.ActionLink("Modificar Curso", "Edit", new { id = Model.Id }, new { @class = "btn btn-primary", id = "modifyButton" }) |
    <a class="btn btn-outline-secondary" asp-action="Index">Regresar a La Lista</a>
</div>

@section Scripts {
    <script>
        function showErrorAlert(message) {
            Swal.fire({
                title: 'Error',
                text: message,
                icon: 'error'
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            // Mostrar alerta de ViewBag.Error si es necesario
            @if (!string.IsNullOrEmpty(ViewBag.Error))
            {
                @:showErrorAlert('@ViewBag.Error');
            }

            // Agregar el evento de clic al botón de modificar
            const modifyButton = document.getElementById('modifyButton');
            if (modifyButton) {
                modifyButton.addEventListener('click', function (event) {
                    event.preventDefault(); // Prevenir la acción predeterminada del enlace
                    Swal.fire({
                        title: '¿Ir a La Vista Modificar?',
                        text: "¿Estás seguro de que quieres ir a la vista Modificar?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Sí, Ir a La Vista Modificar',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '@Url.Action("Edit", "Course", new { id = Model.Id })';
                        }
                    });
                });
            }
        });
    </script>
}