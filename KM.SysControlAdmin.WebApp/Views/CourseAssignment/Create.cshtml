@using KM.SysControlAdmin.EN.Student___EN
@using KM.SysControlAdmin.EN.Course__EN
@model KM.SysControlAdmin.EN.CourseAssignment___EN.CourseAssignment

@{
    ViewData["Title"] = "Crear Asignación";
    List<Student> students = ViewBag.Student as List<Student>;
    List<Course> courses = ViewBag.Course as List<Course>;
}

<h1>Crear Nueva Asignación</h1>
<span>@ViewBag.Error</span>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="Form" asp-action="Create" onsubmit="CreateRecord(event)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="IdStudent" class="control-label"></label>
                <select class="select2 form-select" name="IdStudent" id="IdStudent">
                    <option selected value="">Seleccionar</option>
                    @foreach (var item in students!)
                    {
                        <option value="@item.Id">@item.Name @item.LastName</option>
                    }
                </select>
                <span asp-validation-for="IdStudent" class="text-danger"></span>
            </div>

            <!-- Nuevos campos de texto readonly -->
            <div class="form-group">
                <label for="" class="control-label">Codigo Del Proyecto</label>
                <input type="text" id="CodeProyect" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Codigo Del Participante</label>
                <input type="text" id="ParticipantCode" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Fecha De Nacimiento</label>
                <input type="text" id="DateOfBirth" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Edad</label>
                <input type="text" id="Age" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Nombre De La Iglesia</label>
                <input type="text" id="Church" class="form-control" readonly />
            </div>

            <br />
            <div>
                <img id="imagenPreview" src="" alt="Vista previa de la imagen" style="max-width: 100%; max-height: 200px;" />
            </div>
            <br />

            <div class="form-group">
                <label asp-for="IdCourse" class="control-label"></label>
                <select class="select2 form-select" name="IdCourse" id="IdCourse">
                    <option selected value="">Seleccionar</option>
                    @foreach (var item in courses!)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
                <span asp-validation-for="IdCourse" class="text-danger"></span>
            </div>

            <!-- Nuevos campos de texto readonly -->
            <div class="form-group">
                <label for="" class="control-label">Codigo Del Curso</label>
                <input type="text" id="Code" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Nombre Del Curso</label>
                <input type="text" id="Name" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Fecha De Inicio</label>
                <input type="text" id="StarTime" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Fecha De Finalización</label>
                <input type="text" id="EndTime" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Maximo De Estudiantes</label>
                <input type="text" id="MaxStudent" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Horario</label>
                <input type="text" id="Schedule" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Instructor</label>
                <input type="text" id="Trainer" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label for="" class="control-label">Estatus</label>
                <input type="text" id="Status" class="form-control" readonly />
            </div>

            <!-- Botones de acción -->
            <br />
            <div class="form-group">
                <input type="submit" value="Crear Asignación" class="btn btn-primary" /> |
                <a class="btn btn-outline-secondary" asp-action="Index">Regresar a La Lista</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            // Inicializar select2 para los selects de Membership y Privilege
            $('#IdStudent').select2();
            $('#IdCourse').select2();

            // Automatizar el autocompletado de la información de estudiante
            $('#IdStudent').on('change', function () {
                var studentId = $(this).val();

                if (studentId) {
                    $.ajax({
                        url: '@Url.Action("GetStudentDetails", "CourseAssignment")',
                        type: 'GET',
                        data: { id: studentId },
                        success: function (data) {
                            if (data.error) {
                                Swal.fire({
                                    title: 'Error',
                                    text: data.error,
                                    icon: 'error',
                                    confirmButtonText: 'Aceptar'
                                });
                            } else {
                                $('#CodeProyect').val(data.codeProyect);
                                $('#ParticipantCode').val(data.participantCode);
                                $('#DateOfBirth').val(data.dateOfBirth);
                                $('#Age').val(data.age);
                                $('#Church').val(data.church);

                                // Actualizar la imagen en la vista previa
                                $('#imagenPreview').attr('src', 'data:image/jpeg;base64,' + data.imageData);
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: 'Error',
                                text: 'Error al obtener los detalles del miembro.',
                                icon: 'error',
                                confirmButtonText: 'Aceptar'
                            });
                        }
                    });
                } else {
                    // Limpiar los campos si no se selecciona ningún miembro
                    $('#CodeProyect').val('');
                    $('#ParticipantCode').val('');
                    $('#DateOfBirth').val('');
                    $('#Age').val('');
                    $('#Church').val('');
                    $('#imagenPreview').attr('src', ''); // Limpiar la imagen
                }
            });

            // Automatizar el autocompletado de la información de curso
            $('#IdCourse').on('change', function () {
                var courseId = $(this).val();

                if (courseId) {
                    var url = '@Url.Action("GetCourseDetails", "CourseAssignment")';
                    console.log("URL:", url); // Añadir este log para revisar la URL

                    $.ajax({
                        url: url,
                        type: 'GET',
                        data: { id: courseId },
                        success: function (data) {
                            if (data.error) {
                                Swal.fire({
                                    title: 'Error',
                                    text: data.error,
                                    icon: 'error',
                                    confirmButtonText: 'Aceptar'
                                });
                            } else {
                                $('#Code').val(data.code);
                                $('#Name').val(data.name);
                                $('#StarTime').val(data.starTime);
                                $('#EndTime').val(data.endTime);
                                $('#MaxStudent').val(data.maxStudent);
                                $('#Schedule').val(data.schedule);
                                $('#Trainer').val(data.trainer);
                                $('#Status').val(data.status);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error:", xhr, status, error); // Para capturar detalles del error
                            Swal.fire({
                                title: 'Error',
                                text: 'Error al obtener los detalles del curso.',
                                icon: 'error',
                                confirmButtonText: 'Aceptar'
                            });
                        }
                    });
                } else {
                    // Limpiar los campos si no se selecciona ningún curso
                    $('#Code').val('');
                    $('#Name').val('');
                    $('#StarTime').val('');
                    $('#EndTime').val('');
                    $('#MaxStudent').val('');
                    $('#Schedule').val('');
                    $('#Trainer').val('');
                    $('#Status').val('');
                }
            });


            // Función para mostrar alertas de error con SweetAlert2
            function showErrorAlert(message) {
                Swal.fire({
                    title: 'Error',
                    text: message,
                    icon: 'error',
                    confirmButtonText: 'Aceptar'
                });
            }

            // Mostrar error de ViewBag.Error si es necesario
        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            @:showErrorAlert('@ViewBag.Error');
        }

                // Alerta con SweetAlert2 al crear registro
                window.CreateRecord = function(e) {
                    e.preventDefault();
                    const form = document.getElementById('Form');

                    // Si todos los campos son válidos, muestra la alerta de confirmación
                    Swal.fire({
                        title: '¿Guardar Nuevo Registro?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: 'Sí, Guardar Registro',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            form.submit();
                        }
                    });
                }
        });
    </script>
}
